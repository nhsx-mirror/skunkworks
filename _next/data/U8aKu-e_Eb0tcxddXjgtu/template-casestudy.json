{"pageProps":{"source":{"compiledSource":"/*@jsxRuntime automatic @jsxImportSource react*/\nconst {Fragment: _Fragment, jsx: _jsx, jsxs: _jsxs} = arguments[0];\nconst {useMDXComponents: _provideComponents} = arguments[0];\nfunction MDXContent(props = {}) {\n  const {wrapper: MDXLayout} = Object.assign({}, _provideComponents(), props.components);\n  return MDXLayout ? _jsx(MDXLayout, Object.assign({}, props, {\n    children: _jsx(_createMdxContent, {})\n  })) : _createMdxContent();\n  function _createMdxContent() {\n    const _components = Object.assign({\n      p: \"p\",\n      h2: \"h2\",\n      a: \"a\",\n      table: \"table\",\n      thead: \"thead\",\n      tr: \"tr\",\n      th: \"th\",\n      tbody: \"tbody\",\n      td: \"td\"\n    }, _provideComponents(), props.components), {Tags} = _components;\n    if (!Tags) _missingMdxReference(\"Tags\", true);\n    return _jsxs(_Fragment, {\n      children: [_jsx(Tags, {\n        title: \"\",\n        tags: ['DELETE THIS AND ADD A LIST OF TAGS, SOME EXAMPLES FOLLOW', 'synthetic staining', 'classification', 'deep learning', 'pathology', 'neural networks']\n      }), \"\\n\", _jsx(_components.p, {\n        children: \"Text and images go here in Markdown or HTML\"\n      }), \"\\n\", _jsx(_components.h2, {\n        children: \"Info\"\n      }), \"\\n\", _jsxs(_components.p, {\n        children: [\"Backup of \", _jsx(_components.a, {\n          href: \"\",\n          children: \"NHS England LINK GOES HERE\"\n        })]\n      }), \"\\n\", _jsx(_components.h2, {}), \"\\n\", _jsx(_components.p, {\n        children: \"e.g. A proof-of-concept demonstrator written in Python (machine learning models, command line interface (CLI), Jupyter Notebooks).\"\n      }), \"\\n\", _jsxs(_components.table, {\n        children: [_jsx(_components.thead, {\n          children: _jsxs(_components.tr, {\n            children: [_jsx(_components.th, {\n              children: \"Output\"\n            }), _jsx(_components.th, {\n              children: \"Link\"\n            })]\n          })\n        }), _jsxs(_components.tbody, {\n          children: [_jsxs(_components.tr, {\n            children: [_jsx(_components.td, {\n              children: \"Open Source Code & Documentation\"\n            }), _jsx(_components.td, {\n              children: \"[Github](#add URL)\"\n            })]\n          }), _jsxs(_components.tr, {\n            children: [_jsx(_components.td, {\n              children: \"Case Study\"\n            }), _jsx(_components.td, {})]\n          }), _jsxs(_components.tr, {\n            children: [_jsx(_components.td, {\n              children: \"Technical report\"\n            }), _jsx(_components.td, {\n              children: _jsx(_components.a, {\n                href: \"\",\n                children: \"e.g. biorxiv.org\"\n              })\n            })]\n          }), _jsxs(_components.tr, {\n            children: [_jsx(_components.td, {\n              children: \"Algorithmic Impact Assessment\"\n            }), _jsx(_components.td, {\n              children: \"e.g. N/A\"\n            })]\n          })]\n        })]\n      })]\n    });\n  }\n}\nreturn {\n  default: MDXContent\n};\nfunction _missingMdxReference(id, component) {\n  throw new Error(\"Expected \" + (component ? \"component\" : \"object\") + \" `\" + id + \"` to be defined: you likely forgot to import, pass, or provide it.\");\n}\n","frontmatter":{},"scope":{"title":"TITLE GOES HERE","summary":"ONE LINE SUMMARY GOES HERE","category":"Projects"}},"meta":{"title":"TITLE GOES HERE","summary":"ONE LINE SUMMARY GOES HERE","category":"Projects"}},"__N_SSG":true}